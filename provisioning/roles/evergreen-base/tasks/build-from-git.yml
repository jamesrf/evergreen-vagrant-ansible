- name: install build tools
  action: apt pkg={{item}} state=installed
  with_items:
  - autoconf
  - automake
  - libtool
  - apt-transport-https

- name: clone Evergreen
  git:
    repo: "{{ evergreen_repo }}"
    version: "{{ evergreen_branch }}"
    dest: "{{ evergreen_src_dir }}"
    force: yes

- name: evergreen repo ownership
  file:
    path: "{{ evergreen_src_dir }}"
    owner: opensrf
    group: opensrf
    mode: 0755

- name: install evergreen deps
  shell: "make -f Open-ILS/src/extras/Makefile.install debian-stretch"
  args:
    chdir: "{{ evergreen_src_dir }}"

- name: install evergreen deps
  shell: "make -f Open-ILS/src/extras/Makefile.install debian-stretch-packager"
  args:
    chdir: "{{ evergreen_src_dir }}"

- include_tasks: nodejs-repo.yml

- name: evergreen js repo ownership
  file:
    path: "{{ evergreen_src_dir }}/Open-ILS/web/js/ui/default/staff/"
    owner: opensrf
    group: opensrf
    mode: 0755

- name: npm install
  command: npm install
  args:
    chdir: "{{ evergreen_src_dir }}/Open-ILS/web/js/ui/default/staff/"
  become: true
  become_user: opensrf

- name: npm build-prod
  command: npm run build-prod
  args:
    chdir: "{{ evergreen_src_dir }}/Open-ILS/web/js/ui/default/staff/"




- name: evergreen js repo ownership
  file:
    path: "{{ evergreen_src_dir }}/Open-ILS/src/eg2/"
    owner: opensrf
    group: opensrf
    mode: 0755

- name: npm install
  command: npm install
  args:
    chdir: "{{ evergreen_src_dir }}/Open-ILS/src/eg2/"
  become: true
  become_user: opensrf

- name: ng build
  command: ng build
  args:
    chdir: "{{ evergreen_src_dir }}/Open-ILS/src/eg2/"

- name: autoreconf
  shell: "autoreconf -i"
  args:
    chdir: "{{evergreen_src_dir}}"

- name: build evergreen
  shell: "PATH=$PATH:{{ bindir }} ./configure --prefix={{ prefix }} --sysconfdir={{ sysconfdir }} && make && make STAFF_CLIENT_STAMP_ID={{staff_client_id}} install"
  args:
    chdir: "{{evergreen_src_dir}}"
    #creates: "{{ evergreen_src_dir }}//Open-ILS/src/c-apps/.libs/liboils_cstore.so"


- name: download and unzip dojo
  unarchive:
      src: "http://download.dojotoolkit.org/release-1.3.3/dojo-release-1.3.3.tar.gz"
      dest: "{{prefix}}/var/web/js/dojo/"
      copy: no
      extra_opts: [--strip-components=1]


# wget http://download.dojotoolkit.org/release-1.3.3/dojo-release-1.3.3.tar.gz
# tar -C /openils/var/web/js -xzf dojo-release-1.3.3.tar.gz
# cp -r /openils/var/web/js/dojo-release-1.3.3/* /openils/var/web/js/dojo/.